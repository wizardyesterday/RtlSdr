
LIB= libpfkutil.a
CSRCS=	md5.c m.c base64.c inet_aton.c regex.c
CXXSRCS=fd_mgr.cc thread_slinger.cc shmempipe.cc HSM.cc dll3.cc \
	hsmthread.cc LockWait.cc prioWorkQ.cc fdThreadLauncher.cc \
	sha1.cc msgr.cc childprocessmanager.cc
HDRS=   md5.h types.h bst.h m.h fd_mgr.h  base64.h inet_aton.h \
	thread_slinger.h  shmempipe.h  HSM.h  dll3.h  hsmthread.h \
	LockWait.h  prioWorkQ.h  regex.h fdThreadLauncher.h sha1.h \
	msgr.h childprocessmanager.h bufprintf.h BackTrace.h pfkposix.h \
	circular_buffer.h

#

OBJDIR= debug
COBJS= $(CSRCS:%.c=$(OBJDIR)/%.o)
CXXOBJS= $(CXXSRCS:%.cc=$(OBJDIR)/%.o)
OBJS= $(COBJS) $(CXXOBJS)
INCS= -I../libpfkdll2 -I../BUILD

COPTS= -g3 -O0

_LIB= $(OBJDIR)/$(LIB)

all: $(OBJDIR) $(OBJDIR)/xmakefile
	+make -f $(OBJDIR)/xmakefile _all

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(OBJDIR)/xmakefile: Makefile.debug $(SRCS) $(HDRS)
	rm -f $(OBJDIR)/xmakefile
	cat Makefile.debug > $(OBJDIR)/x
	echo '' >> $(OBJDIR)/x
	for f in $(SRCS) ; do \
		g++ $(INCS) -M $$f \
			-MT $(OBJDIR)/$${f%.cc}.o \
			-MF $(OBJDIR)/xdeps ; \
		cat $(OBJDIR)/xdeps >> $(OBJDIR)/x ; \
		rm -f $(OBJDIR)/xdeps ; \
	done
	mv $(OBJDIR)/x $(OBJDIR)/xmakefile

_all: $(_LIB)

$(_LIB): $(OBJS) $(GENOBJS)
	rm -f $(_LIB)
	ar cq $(_LIB) $(OBJS) $(GENOBJS)
	ranlib $(_LIB)

$(CXXOBJS): $(OBJDIR)/%.o: %.cc
	g++ -c $(INCS) $(COPTS) $< -o $@

$(COBJS): $(OBJDIR)/%.o: %.c
	gcc -c $(INCS) $(COPTS) $< -o $@

clean:
	rm -rf $(OBJDIR)
